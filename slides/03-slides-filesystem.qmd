---
title: "Files & the File System"
subtitle: "Modern Plain Text Computing<br />Week 03a"
format: kjhslides-revealjs
engine: knitr
filters:
  - invert-h1
  - include-code-files
  - line-highlight
author:
  - name: Kieran Healy
    email: kieran.healy@duke.edu
date: last-modified
---

```{r}
#| label: setup
#| include: false
#| echo: false
#| warning: false
#| message: false

library(kjhslides)

kjh_register_tenso()
kjh_set_knitr_opts()
kjh_set_slide_theme()

library(tidyverse)
library(flipbookr)

```

# Files

## What is a file?

:::: {.columns}

::: {.column width="60%"}

![](../assets/01-file-system/01_file_cabinet_hierarchy.png){width=90%}


:::

::: {.column width="35%"}

You very likely have never used one of these. Perhaps you've never even seen one in real life.

:::

::::

::: aside

Illustration: @peek02:_unix_power_tools [p. 21]

:::


## The file cabinet!

:::: {.columns}

::: {.column width="50%"}


![](../assets/01-file-system/01_filing_cabinet.png){width=50%}

:::

::: {.column width="50%"}

"Could capitalism, surveillance, and governance have developed in
the twentieth century without filing cabinets? Of course, but only if
there had been another way to store and circulate paper efficiently;
if that had been the case, that technology would be the object of this
book." --- @robertsonFilingCabinetVertical2021 [p.3]

:::

::::

::: {.notes}
"The ubiquity of the filing cabinet in the twentieth-century office space, along with its noticeable absence of style, has obscured its transformative role in the histories of both information technology and work. In the first in-depth history of this neglected artifact, Craig Robertson explores how the filing cabinet profoundly shaped the way that information and data have been sorted, stored, retrieved, and used.

Invented in the 1890s, the filing cabinet was a result of the nineteenth-century faith in efficiency. Previously, paper records were arranged haphazardly: bound into books, stacked in piles, curled into slots, or impaled on spindles. The filing cabinet organized loose papers in tabbed folders that could be sorted alphanumerically, radically changing how people accessed, circulated, and structured information.

Robertson’s unconventional history of the origins of the information age posits the filing cabinet as an information storage container, an “automatic memory” machine that contributed to a new type of information labor privileging manual dexterity over mental deliberation. Gendered assumptions about women’s nimble fingers helped to naturalize the changes that brought women into the workforce as low-level clerical workers. The filing cabinet emerges from this unexpected account as a sophisticated piece of information technology and a site of gendered labor that with its folders, files, and tabs continues to shape how we interact with information and data in today’s digital world."

:::

## The file cabinet!

::::: {.columns}

:::: {.column width="50%"}


![](../assets/01-file-system/01_filing_cabinet_manual.png){width=75% .lightbox}

::::

:::: {.column width="50%"}

::: {style="font-size: 70%;"}
"Cabinet logic involves the creation of interior compartments to organize storage space according to classification and indexing systems ... Partitions made from paper, not wood, divided storage space to create rigorous order; these partitions took the form of tabbed manila folders separated by tabbed guide cards. This iteration of the logic dispensed with a separate index to make paper discoverable by utilizing the “very organization of the material and its location” with the “vertical guides serving as locating medium.” Elimination of an index was signaled in filing literature by the terms “direct alphabet index” and “automatic index” ... Without the need to consult a separate index, a clerk grouped papers together on their edge behind tabs labeled with classifications, so any given paper could be found quickly." --- [@robertsonFilingCabinetVertical2021, p.104-5]

:::

::::

:::::

::: {.notes}
"The ubiquity of the filing cabinet in the twentieth-century office space, along with its noticeable absence of style, has obscured its transformative role in the histories of both information technology and work. In the first in-depth history of this neglected artifact, Craig Robertson explores how the filing cabinet profoundly shaped the way that information and data have been sorted, stored, retrieved, and used.

Invented in the 1890s, the filing cabinet was a result of the nineteenth-century faith in efficiency. Previously, paper records were arranged haphazardly: bound into books, stacked in piles, curled into slots, or impaled on spindles. The filing cabinet organized loose papers in tabbed folders that could be sorted alphanumerically, radically changing how people accessed, circulated, and structured information.

Robertson’s unconventional history of the origins of the information age posits the filing cabinet as an information storage container, an “automatic memory” machine that contributed to a new type of information labor privileging manual dexterity over mental deliberation. Gendered assumptions about women’s nimble fingers helped to naturalize the changes that brought women into the workforce as low-level clerical workers. The filing cabinet emerges from this unexpected account as a sophisticated piece of information technology and a site of gendered labor that with its folders, files, and tabs continues to shape how we interact with information and data in today’s digital world."

:::

## Daybooks and Ledgers

:::: {.columns}
::: {.column width="30%"}
![](../assets/01-file-system/01_marx_peal.png){width=85%}

:::

::: {.column width="60%" .right}
Peal and Company (Bootmakers), London. "The collection consists of 660 items, 40 of which are administrative records such as account books and ledgers. The remaining 620 volumes are 'Feet Books' recording each order and usually containing an outline drawing of the customer's feet. Every book includes 150 orders and was given a running number. The earliest surviving book is no. 23 from the 1870s and the last is no. 1002 from shortly before the firm closed in 1965."

"Mr Marx of Berlin c/o Dr W Smith, West Lodge, West End Lane, Hampstead." 02/003 (Book 023, c.1870) page 142.

::: {.tiny}
([London Archives Collections Catalogue](https://search.lma.gov.uk/scripts/mwimain.dll/144/LMA_OPAC/web_detail?SESSIONSEARCH&exp=refd%20LMA/4454).)
:::


:::
::::



## Index cards

:::: {.columns}
::: {.column width="70%"}
![](../assets/01-file-system/01_library_index-card_shelf.png){width=90%}
:::

::: {.column width="30%" .right}

Like a filing cabinet, but smol

:::
::::


## Index cards

![](../assets/01-file-system/01_library_index_cards.png){width=90%}


## Edge-Notched Cards

![](../assets/01-file-system/01_mcbee_1.jpg){width=90%}

## Edge-Notched Cards

![](../assets/01-file-system/01_mcbee_2.jpg){width=80%}

::: aside
Ann Sneesby-Koch, [Me and Mr McBee](https://essentials.neh.gov/divisions/odh/featured-project/me-and-mr-mcbee), National Endowment for the Humanities, 2013.
:::

## Edge-Notched Cards

:::: {.columns}
::: {.column width="50%"}
![](../assets/01-file-system/01_mcbee_stasi.jpg){width=90%}
:::

::: {.column width="30%" .right}

Stasi record card for Werner Teske, a former Stasi employee sentenced for espionage, from 1981. ([Source](https://en.wikipedia.org/wiki/Edge-notched_card#/media/File:Kerblochkartei_Teske.jpg).)

:::
::::




# Automating Information and Control

## A music box

![](../assets/01-file-system/01_music_box.png){width=100%}

## A Jacquard Loom

![](../assets/01-file-system/01_jacquard_loom.png){width=100%}


## Jacquard Loom Cards

![](../assets/01-file-system/01_jacquard_loom_card_2.png){width=100%}


# Tabulation Machines

## Hollerith Cards

![](../assets/01-file-system/01_hollerith_card.png){width=100%}


::: {.notes}
"At the end of the 1800s Herman Hollerith invented the recording of data on a medium that could then be read by a machine,[dubious – discuss][13][14][15][16] developing punched card data processing technology for the 1890 U.S. census.[17] His tabulating machines read and summarized data stored on punched cards and they began use for government and commercial data processing.
Initially, these electromechanical machines only counted holes, but by the 1920s they had units for carrying out basic arithmetic operations.[18]: 124  Hollerith founded the Tabulating Machine Company (1896) which was one of four companies that were amalgamated via stock acquisition to form a fifth company, Computing-Tabulating-Recording Company (CTR) (1911), later renamed International Business Machines Corporation (IBM) (1924). Other companies entering the punched card business included The Tabulator Limited (Britain, 1902), Deutsche Hollerith-Maschinen Gesellschaft mbH (Dehomag) (Germany, 1911), Powers Accounting Machine Company (US, 1911), Remington Rand (US, 1927), and H.W. Egli Bull (France, 1931).[19] These companies, and others, manufactured and marketed a variety of punched cards and unit record machines for creating, sorting, and tabulating punched cards, even after the development of electronic computers in the 1950s."
:::

## Hollerith Machines

![](../assets/01-file-system/01_hollerith_tabulator.png){width=100%}


## Hollerith Machines

![](../assets/01-file-system/01_hollerith_card_1890_yellow.png){width=100%}


## Hollerith Machines

![](../assets/01-file-system/01_hollerith_card_1890_decoder_fields.png){width=100%}

::: {.notes}
|               |                              |                                                           |                                     |
|---------------|------------------------------|-----------------------------------------------------------|-------------------------------------|
| Field 1       | Civil War Veterans           | CM, CL, CS: Marine, Sailor, Soldier                       | Confederate Army                    |
|               |                              | UM, UL, US: Marine, Sailor, Soldier                       | United States Army                  |
| Field 2       | Relationship (family)        | Hd: Head of Household                                     | Mb: Member of family                |
|               |                              | Wf: Wife                                                  | O: Other                            |
| Field 3       | Race                         | Jp: Japanese                                              | In: Civilized Indian (taxpaying)    |
|               |                              | Ch: Chinese                                               | Mu: Mulatto                         |
|               |                              | B: Negro                                                  | Qd: Quadroon                        |
|               |                              | W: White                                                  | Oc: Octoroon                        |
| Field 4       | Gender                       | Male or Female                                            |                                     |
| Field 5 & 6   | Your Age                     | Combination of numbers                                    | 0: if under 1 year old              |
|               |                              | Un: Unknown                                               | Mo: \# of months if a baby          |
| Field 7       | Conjugal Condition           | Dv: Divorced                                              | Mr: Married more than 1 year        |
|               |                              | Un: Unknown                                               | CY: Married this year               |
|               |                              | Wd: Widow/Widower                                         | (in the Census Year)                |
|               |                              | Sg: Single                                                |                                     |
| Field 8       | \# of Children born          | Up to 19 children                                         |                                     |
| Field 9       | \# of Children alive         | Up to 19 children                                         |                                     |
| Field 10 & 11 | Your birthplace              | Combination of upper case letters                         | St: birth was in state of residence |
|               |                              | and lower case letters                                    | Un: Unknown                         |
| Field 12      | Mother’s birthplace          | Two Letter Country Codes                                  |                                     |
| Field 13      | Father’s birthplace          | Two Letter Country Codes                                  |                                     |
| Field 14      | \# of years in the US        |                                                           |                                     |
| Field 15      | Citizenship for Foreign-born | Al: Alien                                                 | Pa: First Papers submitted          |
|               |                              | Na: Naturalized citizen                                   | Un: Unknown                         |
| Field 16 & 17 | Occupation                   | Combination of upper case letters  and lower case letters | NG: Not Gainfully employed or       |
|               |                              |                                                           | in School                           |
| Field 18      | Unemployed                   | 1-12: Months unemployed                                   | Oc                                  |
|               |                              |                                                           | O                                   |
| Field 19      | Education                    | OK: Can read and write                                    | ————-OR———–                         |
|               |                              | W: Can read but not write                                 | 1-9: Number of months in school     |
|               |                              | R: : Can write but not read                               | 0: : Not in school                  |
| Field 20      | Language Spoken              | Un: Understand English?                                   | Ft: Father’s language               |
|               |                              | En: English                                               | Mt: Mother’s language               |
|               |                              | Ot: Other                                                 |                                     |
| Field 21      | Tenure                       | Fh: Farm Hired (Rented)                                   | Hh: Home Hired (Rented)             |
|               |                              | FM: Farm Owned (w/ mortgage)                              | Hf: Home owned Free and clear       |
|               |                              | Ff: Farm owned Free and clear                             | Hm: Home Owned (w/ mortgage)        |
|               |                              | X: : Does not apply                                       |                                     |
| Far Left Side | Location                     | State, county, city,: local divisions and                 | Enumerator District                 |
|               |                              |                                                           |                                     |
:::

## Hollerith Operators {.smaller}

:::: {.columns}
::: {.column width="70%"}
  ![](../assets/01-file-system/01_hollerith_operator_01.png){width=80% .lightbox}
:::

::: {.column width="30%" .right}
  Demonstrating a older card-puncher, probably to show how things had improved with census tabulation methods. This is likely the "Before" picture with a roll from the 1890 Census. The card-puncher is a [Pantograph](https://en.wikipedia.org/wiki/Pantograph).
:::
::::




## Hollerith Operators {.smaller}

:::: {.columns}
::: {.column width="70%"}
  ![](../assets/01-file-system/01_hollerith_operator_02.png){width=80% .lightbox}
:::

::: {.column width="30%" .right}
  Same woman as the previous photo; her colleague on the right is demonstrating the newer, faster IBM Type 001 Key Puncher. (Again, probably a re-enactment / demo of earlier techniques.)
:::
::::



# Programmable Computers

## Logic from Sand

:::: {.columns}
::: {.column width="40%"}
  ![](../assets/01-file-system/01_petzold_cover.png){width="100%"}
:::

::: {.column width="60%"}
  The best book to read about how the guts of a programmable computer works is Charles Petzold's [-@petzold22:_code].
:::
::::

## IBM punch cards

:::: {.columns}
::: {.column width="70%"}
  ![](../assets/01-file-system/01_ibm_punch_card_verifiers.png){width=100%}
:::

::: {.column width="30%" .right}
  In the longer term, punch card writers got much more efficient. And now they could be fed into machines that could use them to run programs instead of just tabulate the punches.
:::
::::

## IBM punch cards

![](../assets/01-file-system/01_ibm_card.png){width=100%}

An IBM punch card is 80 columns wide. The first CRT terminals displayed 80 columns of text for this reason. You'll see 80 columns of text pop up as a standard in all kinds of places.


## Big Iron {.smaller}

:::: {.columns}
::: {.column width="70%"}
![](../assets/01-file-system/01_ibm_system_360.png){width=80%}
:::

::: {.column width="30%" .right}
No screens! Paper in, paper out for the operator; magnetic tapes for storage in the background. This is an IBM/360, the most important class of mainframe in the 1960s and early 1970s.


::::: {style="font-size: 70%; color: #C0C0C0;"}
One thing that's hard to convey in pictures is the way that---because of all the daisy-wheel or tractor-fed printing, mechanical card processing, and huge reels of tape spinning up and down---rooms like this were _loud_.
:::::

:::
::::

## Storage

:::: {.columns}
::: {.column width="70%"}
![](../assets/01-file-system/01_bryant_hard_drive1.png){width=60%}

:::

::: {.column width="30%" .right}
Notice that the "File" here is the machine itself, or at most a single disk platter.
:::
::::


## Storage {.smaller}

:::: {.columns}
::: {.column width="55%"}
  ![](../assets/01-file-system/01_bryant_hard_drive_2.png){width=90%}
:::

::: {.column width="45%" .right}
The older way of speaking is still with us, as when we speak of someone's "Application File" or "Tenure File"; that is, a file is a collection of related documents.

But the newer way, where "file" means "a single document", is now dominant, especially in computing.
:::
::::


# What Files Are

## A file is a [metaphor]{.fg-yellow}

- Your computer does not have "files" in the way that a filing cabinet has files.
- A file is an [abstraction]{.fg-lblue}, a way of naming and organizing data on your computer that at a lower-level is "just zeros and ones" (and at a lower level than _that_ is just electromagnetic patterns in some physical substrate that can be _interpreted_ as zeros and ones).
- The file metaphor in computing dates most prominently to the development of the Unix operating system in the early 1970s.
- Files are organized in filesystems.

## There are many kinds of files

- As many as there are kinds of application.
- Files have the name someone gives them. `My Thesis`, `term_paper`, and so on.
- There's a longstanding (though weak) convention about using file extensions, tagged on to the end of a name, to signal _to users_ what kind of file it is: `term_paper.docx`, `.xlsx`, `.ppt`, `.pdf`, `.sqlite`, `.png`, `.jpg`, `.ps`, `.mp3`, `.mp4`, `.gif`, `.csv`, `.Rmd`, `.qmd`, `.md`, `.txt`.
- Files don't know what their extension is, a bit like how electrons don't know what color the outside of their copper wire is.

## Binary and Plain Text files

- Understanding the general notion of "encoding information" is a very rich and deep topic that, sadly, we are going to skip.
- If a file is in some binary format then in general you won't be able to read its contents just by looking inside it. You will need an application that understands the file's particular format; i.e. the way that information in it is encoded.
- A `.jpg` file uses a set of rules to store numbers that can be interpreted as corresponding to things like the hue and location of a pixel. But _you_ won't see a picture if you look inside a `.jpg` file using a text editor. You'll need an application that knows how to read `.jpg` files.

## What is Plain Text?

- Text files, though, are sort of special. What's visibly in them appears to correspond much more closely to what they represent. A plain text file seems to represent the letter "A" with a symbol that looks like an "A". So much so that we can say it _is_ an "A".

- That means that when you look at a text file you can see what is in it immediately. And editing the contents of the file is the same as editing its text.

- There's still an "encoding" of course! It's still necessary to have an application that can read the text file and display it on a screen, etc. But what's inside seems much closer to being immediately interpretable "just by looking", because most of it is letters and numbers.

## But wait!

::::: {.fragment fragment-index=1}
- _I thought you said computers just store ones and zeros?_
:::::

::::: {.fragment fragment-index=2}
- Yes this is true. In `ASCII` encoding, for instance, an "A" is really just conventionally the symbol represented by the seven-bit binary number `1000001`, which exists on some sort of storage medium (an SSD, a Hard Disk, a floppy disk, a punch card, a reel of paper, whatever) in such a way that some device can read its contents.

:::::

::::: {.fragment fragment-index=3}
- ASCII is the **A**merican **S**tandard **C**ode for **I**nformation **I**nterchange. It was first specified in 1963.
:::::

## ASCII

::: {style="font-size: 85%;"}

The venerable and now outdated [ASCII](https://en.wikipedia.org/wiki/ASCII) character set: 26 uppercase letters; 26 lowercase letters; 10 digits; 32 printable symbols; and 33 control characters ultimately derived from telegraph code, stock-ticker, and teletype machines.

:::

:::: {.columns}
::: {.column width="70%"}

```{r}
#| echo: FALSE
readxl::read_xlsx(here::here("files", "examples", "ascii_table.xlsx")) |>
  mutate(Binary = str_pad(Binary, width = 7, pad = "0")) |>
  kableExtra::kbl() |>
  kableExtra::kable_styling(fixed_thead = TRUE) |>
  kableExtra::scroll_box(height = "400px",
                         width = "700px",
                         box_css = "border: 0px; padding: 5px;")

```

:::

::: {.column width="30%" .right}
  ![](../assets/01-file-system/01_teletype_model_33.png){width=100%}
:::
::::



## Modern Text: Unicode and UTF-8

- ASCII is a seven bit system that only has $2^7$ or 128 "code points" — i.e. individual slots that could represent anything. It left out all kinds of things. (Other alphabets, for instance. Also any diacritics or accents. And any number of symbols.)
- Eight-bit computers allowed for 256 code points. The second 128 never had a single standard for what they should represent. The most common extension was [ISO-8859-1](https://en.wikipedia.org/wiki/ISO/IEC_8859-1) or "Latin1" encoding, but there were others too. This created conflicts and confusion when a program or application expecting text encoded according to one standard was fed text encoded with a different standard.

## Modern Text: Unicode and UTF-8

- Encoding conflicts are why you still sometimes see this sort of thing on web pages: "CafÃ©"  or "Caf◻" instead of "Café".
- It is surprisingly difficult to establish the encoding of a large text file that doesn't explicitly declare how it's encoded in some sort of metadata. (You can guess, but it can be super-annoying.)
- Nowadays this has _mostly_ been resolved by the adoption of [Unicode](https://home.unicode.org) and its simplest and most widespread encoding, [UTF-8](https://en.wikipedia.org/wiki/UTF-8), which extends ASCII to 1,112,064 code points. It uses between one and four eight-bit elements to represent particular character glyphs.
- Many older datasets may still be encoded in something other than UTF-8, however.


# Organizing Files

## Input/Output

- Beginning in the 1970s, computing rapidly moves away from print I/O and towards screens.
- Storage capacity and processing power increase radically (and get much smaller) with the development of hard drives and integrated circuits.
- We get to a point where our "Teletype" interface with the machine is purely metaphorical: this is the _command line_ or _console_.
- And after that, in the late 1970s and early 1980s, an entirely new set of metaphors gets introduced: files represented by "icons" inside "windows", first on on a metaphorical "desktop" and then later on a more abstract touch-based surface.

## A late-model teletype (TTY) machine

![](../assets/01-file-system/01_teletype_telex_machine.png)


## The DEC VT-100 Terminal (1978)

![](../assets/01-file-system/01_dec_vt100.png)

## The IBM PC (1981)

![](../assets/01-file-system/01_ibm_pc_5150.png)

## The Apple Macintosh (1984)

![](../assets/01-file-system/01_apple_macintosh.png)


## The macOS Terminal app icon

![](../assets/01-file-system/01_macos_terminal_icon.png)


## This is where we came in

- The "Office" and "Engineering" models really start to diverge in the 1980s
- A lot of computing gets done using the Engineering model and its metaphors, even as the Office model comes to dominate.
- But many of these **newer systems remain built on top of the world made out of the older metaphors**. And in particular, the idea of _named files_ living in a _hierarchical file system_ that are acted on in sequence through _written instructions_ remains extremely important for many computing tasks.
- Especially the stuff we need to do.

# Back to the file system

## Files {.smaller}

:::: {.columns}

::: {.column width="45%"}

![](../assets/01-file-system/01_file_cabinet_hierarchy.png){width=100%}


:::

::: {.column width="55%"}

- Our data is stored --- or represented as being stored --- in a _file system_.
- This is, again, a way of organizing items for our benefit.
- The UNIX operating system developed at Bell Labs codifies the modern "file" metaphor.
- Files are named items that live in a [hierarchical file system]{.fg-lblue}. "Ordinary" documents like `notes.txt` are thought of as files, which seems natural to us now.
- The hierarchy is made of [folders]{.fg-lblue} or "directories" that, like a filing cabinet, can nest inside one another and inside larger storage units.
- By navigating the hierarchy from its [root]{.fg-red}, we can trace a [path]{.fg-lblue} to any particular file.


:::

::::
