---
title: "10. Databases and APIs"
date: last-modified
date-format: full
---

```{r slides, echo=FALSE, include=FALSE}
source(here::here("R", "slide-things.R"))

slide_details <- tibble::tribble(
  ~youtube_id,   ~title, ~slide, ~active,
  "", "", "1", TRUE)

```

## This week ...

Working with data that's nominally larger than the amount of RAM you have. Also talking programatically to computers that store way more data than you could fit on your computer.

## Required Reading

- @wickham23:_r_data_scien.

[Read the text online.](https://r4ds.hadley.nz/). Take a look at [Chapter 21](https://r4ds.hadley.nz/databases) on databases. It uses a different database back-end from the one we'll use in class, but the ideas are the same.

## Examples

[This week's examples and demos](/example/10-example-databases.qmd).

## Assignment

[This week's assignment](/assignment/10-assignment-databases.qmd). The assignment has some more reading, and asks you to make a small project using the `tidycensus` package and the Census API.

## Slides

<script type="application/javascript">

function resizeIFrameToFitContent( iFrame ) {

   iFrame.width  = document.getElementById("quarto-document-content").clientWidth;
   iFrame.height  = (document.getElementById("quarto-document-content").clientWidth * 0.5625)
}

window.addEventListener('DOMContentLoaded', function(e) {

    var iFrame = document.getElementById( 'quartoframe' );
    resizeIFrameToFitContent( iFrame );
    } );

</script>

<!--iframe class="slide-deck" id="quartoframe" src="../slides/08-slides.html"></iframe-->

```{r show-slide-tabs, echo=FALSE, results="asis"}
#slide_win_button("/slides/08-slides")
```
