# Motivation

Researchers depend on software to get their work done. But often, they do not know enough about how their computers work. This makes their lives more difficult. It's not that everyone needs to be a software engineer. But, as researchers working with data of various kinds, we just don't make the best use of our computers. Nor are we encouraged to reflect on why they work the way they do. Instead we end up fending for ourselves and picking things up informally. Or, instead of getting on with the task at hand, course instructors are forced to spend time bringing people up to speed about where that document went, or what a file is, or why "that didn't work" just now. In the worst case, we never get a feel for this stuff at all and end up marinating in an admixture of magical thinking about and sour resentment towards the machines we sit in front of for hours each day, and will likely sit in front of for the rest of our careers.

All of that is bad. This course is meant to help. The coding and data analysis tools we have are powerful, but they run against the grain of the devices we use most often: our phones. As a rule, apps on your phone hide their implementation details from you and do not want you to worry too much about where things are stored or how things are accomplished or what happens if you need to do the same thing again later. The fragmented and multifacted tasks associated with scholarly research, meanwhile, make distinctive demands on software. Most of them have to do with the need for *control* over what you are doing, and especially the importance of having a *record* of what you did that you can revisit and *reproduce* if needed. They also need to allow us to track down and diagnose errors. This can be a tricky process to think about and work through in a systematic way.

To help address these challenges, modern computing platforms provide us with a suite of powerful, modular, [composable](https://en.wikipedia.org/wiki/Function_composition_(computer_science)) tools and techniques. The bad news is that they are not magic; they cannot do our thinking for us. The good news is that they are stable and reliable. Many are supported by helpful communities. Most are developed and improved in the open. Almost all are available for free. Nearly without exception, they tend to work through the medium of explicit, structured instructions written out in plain text. In other words they work by having you write some code, in the broadest sense. People who do research involving structured data of any kind should become familiar with these tools. Lack of familiarly with the basics encourages bad habits and unhealthy attitudes ranging from misplaced contempt to creeping despair.
